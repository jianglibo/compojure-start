{:create-tables-sql
  [
    "CREATE TABLE user (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      username VARCHAR(64) NOT NULL UNIQUE,
      nickname VARCHAR(128),
      email VARCHAR(64) NOT NULL UNIQUE,
      mobile VARCHAR(32) UNIQUE,
      password CHAR(44) NOT NULL,
      password_salt CHAR(24) NOT NULL,
      status VARCHAR(16) DEFAULT 'NORMAL',
      created_at TIMESTAMP(6) DEFAULT NOW,
      updated_at TIMESTAMP(6) DEFAULT NOW
    )"
    "CREATE TABLE role (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name VARCHAR(128) NOT NULL UNIQUE,
      created_at TIMESTAMP(6) DEFAULT NOW,
      updated_at TIMESTAMP(6) DEFAULT NOW
    )"
    "CREATE TABLE group4u (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name VARCHAR(128) NOT NULL UNIQUE,
      created_at TIMESTAMP(6) DEFAULT NOW,
      updated_at TIMESTAMP(6) DEFAULT NOW
    )"

    "CREATE TABLE permission (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      pms VARCHAR(128) NOT NULL UNIQUE
    )"

    "CREATE TABLE group4u_user (
      group4u_id INTEGER NOT NULL,
      user_id INTEGER NOT NULL,
      CONSTRAINT fk_gu_group4u FOREIGN KEY (group4u_id) REFERENCES group4u (id),
      CONSTRAINT fk_gu_user FOREIGN KEY (user_id) REFERENCES user (id),
      CONSTRAINT unique_g_u UNIQUE (group4u_id, user_id)
    )"

    "CREATE TABLE role_user (
      role_id INTEGER NOT NULL,
      user_id INTEGER NOT NULL,
      CONSTRAINT fk_ru_role FOREIGN KEY (role_id) REFERENCES role (id),
      CONSTRAINT fk_ru_user FOREIGN KEY (user_id) REFERENCES user (id),
      CONSTRAINT unique_r_u UNIQUE (role_id, user_id)
    )"

    "CREATE TABLE group4u_role (
      role_id INTEGER NOT NULL,
      group4u_id INTEGER NOT NULL,
      CONSTRAINT fk_gr_role FOREIGN KEY (role_id) REFERENCES role (id),
      CONSTRAINT fk_gr_group4u FOREIGN KEY (group4u_id) REFERENCES group4u (id),
      CONSTRAINT unique_g_r UNIQUE (role_id, group4u_id)
    )"

    "CREATE TABLE permission_role (
      role_id INTEGER NOT NULL,
      permission_id INTEGER NOT NULL,
      CONSTRAINT fk_pr_role FOREIGN KEY (role_id) REFERENCES role (id),
      CONSTRAINT fk_pr_permission FOREIGN KEY (permission_id) REFERENCES permission (id),
      CONSTRAINT unique_p_r UNIQUE (role_id, permission_id)
    )"

    "CREATE TABLE permission_user (
    permission_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    CONSTRAINT fk_pu_permmission FOREIGN KEY (permission_id) REFERENCES permission (id),
    CONSTRAINT fk_pu_user FOREIGN KEY (user_id) REFERENCES user (id),
    CONSTRAINT unique_p_u UNIQUE (permission_id, user_id)
    )"
    ]

:drop-tables-sql
  [
    "DROP TABLE IF EXISTS role_user RESTRICT"
    "DROP TABLE IF EXISTS group4u_role RESTRICT"
    "DROP TABLE IF EXISTS group4u_user RESTRICT"
    "DROP TABLE IF EXISTS permission_role RESTRICT"
    "DROP TABLE IF EXISTS permission_user RESTRICT"
    "DROP TABLE IF EXISTS user RESTRICT"
    "DROP TABLE IF EXISTS role RESTRICT"
    "DROP TABLE IF EXISTS group4u RESTRICT"
    "DROP TABLE IF EXISTS permission RESTRICT"
    ]
 }

