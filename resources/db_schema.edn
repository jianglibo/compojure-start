{:create-tables-sql
  [
    "CREATE TABLE user (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      username VARCHAR(64) NOT NULL UNIQUE,
      nickname VARCHAR(128),
      email VARCHAR(64) NOT NULL UNIQUE,
      mobile VARCHAR(32) UNIQUE,
      password CHAR(44) NOT NULL,
      password_salt CHAR(24) NOT NULL,
      status VARCHAR(16) DEFAULT 'NORMAL',
      created_at TIMESTAMP(6) DEFAULT NOW,
      updated_at TIMESTAMP(6) DEFAULT NOW
    )"
    "CREATE TABLE role (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name VARCHAR(128) NOT NULL UNIQUE,
      created_at TIMESTAMP(6) DEFAULT NOW,
      updated_at TIMESTAMP(6) DEFAULT NOW
    )"
    "CREATE TABLE group4u (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name VARCHAR(128) NOT NULL UNIQUE,
      created_at TIMESTAMP(6) DEFAULT NOW,
      updated_at TIMESTAMP(6) DEFAULT NOW
    )"

    "CREATE TABLE permission (
      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      pms VARCHAR(128) NOT NULL UNIQUE
    )"

    "CREATE TABLE group4u_user (
      group4u_id INTEGER NOT NULL REFERENCES group4u (id),
      user_id INTEGER NOT NULL REFERENCES user (id),
      PRIMARY KEY (group4u_id, user_id)
    )"

    "CREATE TABLE gpath (
      ancestor_id INTEGER NOT NULL REFERENCES group4u (id),
      descendant_id INTEGER NOT NULL REFERENCES group4u (id),
      path_level INTEGER NOT NULL,
      PRIMARY KEY (ancestor_id, descendant_id)
    )"

    "CREATE TABLE role_user (
      role_id INTEGER NOT NULL REFERENCES role (id),
      user_id INTEGER NOT NULL REFERENCES user (id),
      PRIMARY KEY (role_id, user_id)
    )"

    "CREATE TABLE group4u_role (
      role_id INTEGER NOT NULL REFERENCES role (id),
      group4u_id INTEGER NOT NULL REFERENCES group4u (id),
      PRIMARY KEY (role_id, group4u_id)
    )"

    "CREATE TABLE permission_role (
      role_id INTEGER NOT NULL REFERENCES role (id),
      permission_id INTEGER NOT NULL REFERENCES permission (id),
      PRIMARY KEY (role_id, permission_id)
    )"

    "CREATE TABLE permission_user (
      permission_id INTEGER NOT NULL REFERENCES permission (id),
      user_id INTEGER NOT NULL REFERENCES user (id),
      PRIMARY KEY (permission_id, user_id)
    )"
    ]

:drop-tables-sql
  [
    "DROP TABLE IF EXISTS role_user RESTRICT"
    "DROP TABLE IF EXISTS group4u_role RESTRICT"
    "DROP TABLE IF EXISTS group4u_user RESTRICT"
    "DROP TABLE IF EXISTS gpath RESTRICT"
    "DROP TABLE IF EXISTS permission_role RESTRICT"
    "DROP TABLE IF EXISTS permission_user RESTRICT"
    "DROP TABLE IF EXISTS user RESTRICT"
    "DROP TABLE IF EXISTS role RESTRICT"
    "DROP TABLE IF EXISTS group4u RESTRICT"
    "DROP TABLE IF EXISTS permission RESTRICT"
    ]
 }

